---
#########################################
- alias: line crossing template - telegram & tv notify
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.driveway_line_crossing
        - binary_sensor.front_door_line_crossing
      to: "on"
  action:
    - service: notify.living_room_tv
      data_template:
        message: "{{ trigger.to_state.attributes.friendly_name }} detected"
    - service: notify.telegram_jon
      data_template:
        title: "{{ trigger.to_state.attributes.friendly_name }}"
        message: "{{ trigger.to_state.attributes.friendly_name }}"
        data:
          photo:
            url: >
              {% if trigger.entity_id == 'binary_sensor.driveway_line_crossing' %}
                {{ states.sensor.hik_driveway_pic.state }}
              {% elif trigger.entity_id == 'binary_sensor.front_door_line_crossing' %}
                {{ states.sensor.db_pic.state }}
              {% endif %}
#########################################
- alias: "front door line or doorbell, dark out, occupied, foyer and ext on"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door_line_crossing
      to: "on"
    - platform: event
      event_type: doorbird_front_door_doorbell
  condition:
    - condition: state
      entity_id: binary_sensor.alarm_occupancy_status
      state: "on"
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "off"
    - condition: sun
      after: sunset
      after_offset: "-1:00:00"
  action:
    - service: homeassistant.turn_on
      entity_id: switch.exterior_foyer, switch.exterior_cans
    - service: script.popup_camera
      data:
        deviceID: "wallpanel"
        camera: "camera.front_door_live"
#########################################
- alias: "front door line or doorbell, dark out, unoccupied, foyer and ext on for 10 min"
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door_line_crossing
      to: "on"
    - platform: event
      event_type: doorbird_front_door_doorbell
  condition:
    - condition: state
      entity_id: binary_sensor.alarm_occupancy_status
      state: "off"
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "off"
    - condition: sun
      after: sunset
      after_offset: "-1:00:00"
  action:
    - service: homeassistant.turn_on
      entity_id: switch.exterior_foyer, switch.exterior_cans
    - service: timer.start
      entity_id: timer.front_door_motion_timer
- alias: Turn off foyer and ext lights 10 minutes after trigger
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.front_door_motion_timer
  action:
    - service: homeassistant.turn_off
      data:
        entity_id:
          - switch.exterior_foyer
#########################################
- alias: "doorbird google home video"
  trigger:
    - platform: event
      event_type: doorbird_front_door_doorbell
  action:
    - service: media_player.play_media
      data_template:
        entity_id: media_player.main_googlehome
        media_content_id: "http://192.168.45.249:8123/api/camera_proxy_stream/camera.front_door_live?token={{ states.camera.front_door_live.attributes.access_token }}"
        media_content_type: image/jpg
    - delay: "00:00:30"
    - service: media_player.turn_off
      data:
        entity_id: media_player.main_googlehome
#########################################
- alias: doorbird sonos interrupt - master
  trigger:
    - platform: event
      event_type: doorbird_front_door_doorbell
  condition:
    - condition: state
      entity_id: media_player.master
      state: "playing"
  action:
    - service: script.sonos_say
      data:
        sonos_entity: media_player.master
        volume: 0.5
        message: "doorbell rang!"
        delay: "00:00:05"
#########################################
- alias: "deck person, dark out, deck lights on"
  trigger:
    - platform: state
      entity_id: binary_sensor.deck_person
      to: "on"
    - platform: state
      entity_id: binary_sensor.deck_stairs_person
      to: "on"
  condition:
    - condition: state
      entity_id: sensor.period_of_day
      state: "night"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_deck_on
# deck lights off when person detection
- alias: "deck lights off when no person detected for 10min"
  trigger:
    - platform: state
      entity_id: binary_sensor.deck_person
      to: "off"
      for:
        minutes: 10
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_deck_off
#########################################
- alias: "deck motion light - timer start"
  trigger:
    - platform: state
      entity_id: binary_sensor.sunroom_pir
      to: "on"
  action:
    - service: timer.start
      entity_id: timer.deck_timer
- alias: "deck lights on deck door opens"
  trigger:
    - platform: state
      entity_id: sensor.deck_door
      to: "Violated"
  condition:
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "off"
    - condition: state
      entity_id: timer.deck_timer
      state: "active"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_deck_on
#########################################
- alias: "garage person/motion, dark out, garage lights on"
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_person
      to: "on"
    - platform: state
      entity_id: binary_sensor.garage_motion
      to: "on"
  condition:
    - condition: state
      entity_id: sensor.period_of_day
      state: "night"
  action:
    - service: homeassistant.turn_on
      entity_id: light.mudroom_garage_lights
# garage lights off when no person detected for 15min
- alias: "garage lights off when no person detected for 15min"
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_motion
      to: "off"
      for:
        minutes: 15
  condition:
    - condition: state
      entity_id: light.mudroom_garage_lights
      state: "on"
  action:
    - service: homeassistant.turn_off
      entity_id: light.mudroom_garage_lights
#########################################
- alias: "wake up - good morning (only between Oct-May)"
  trigger:
    - platform: state
      entity_id: binary_sensor.sleep_status
      from: "on"
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "off"
    - condition: or
      conditions:
        - condition: template
          value_template: '{{ now().strftime("%m")|int > 10 }}'
        - condition: template
          value_template: '{{ now().strftime("%m")|int < 4 }}'
  action:
    - service: homeassistant.turn_on
      entity_id: switch.upstairs_hall_treads, switch.great_room_lamp
#########################################
- alias: "motion lights"
  trigger:
    - platform: state
      entity_id:
        - sensor.foyer_pir
        - sensor.basement_pir
        - sensor.bar_pir
      to: "Violated"
    - platform: state
      entity_id:
        - sensor.foyer_pir
        - sensor.basement_pir
        - sensor.bar_pir
      to: "Normal"
      for:
        minutes: 10
  condition:
    - condition: state
      entity_id: input_boolean.block_all_motion_lights
      state: "off"
  action:
    service_template: >
      {% if trigger.to_state.state == 'Violated' %}homeassistant.turn_on
      {% else %}homeassistant.turn_off{% endif %}
    data_template:
      entity_id: >
        {% set trigger_entity = trigger.entity_id %}
        {% if trigger_entity == 'sensor.foyer_pir' %}
          switch.exterior_foyer
        {% elif trigger_entity == 'sensor.basement_pir' %}
          switch.basement_main
        {% elif trigger_entity == 'sensor.bar_pir' %}
          switch.basement_bar_cabinets
        {% endif %}
#########################################
- alias: "lauras office lights off"
  trigger:
    - platform: state
      entity_id: binary_sensor.mudroom_occupancy
      to: "off"
      for:
        minutes: 5
  action:
    - service: homeassistant.turn_off
      entity_id: switch.pulte_planning_center_lauras_office
#########################################
# server rack lights - on
# - alias: "server rack lights - on"
#   trigger:
#     - platform: state
#       entity_id: sensor.storage_pir
#       to: "Violated"
#   action:
#     - service: homeassistant.turn_on
#       entity_id: switch.switch1
# # server rack lights - off
# - alias: "server rack lights - off"
#   trigger:
#     - platform: state
#       entity_id: sensor.storage_pir
#       to: "Normal"
#       for:
#         minutes: 5
#   action:
#     - service: homeassistant.turn_off
#       entity_id: switch.switch1
#########################################
# Close master blinds if its dusk upon 1st motion on the entry only 1 time (after 1hr before sunset)
- alias: master blinds at dusk
  trigger:
    - platform: state
      entity_id: binary_sensor.master_entry_pir
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.master_blinds_run_once
      state: "off"
    - condition: sun
      after: sunset
      after_offset: "-1:00:00"
  action:
    - service: scene.turn_on
      entity_id: scene.10877
    - service: homeassistant.turn_on
      entity_id: input_boolean.master_blinds_run_once
#########################################
- alias: close master blinds at night
  trigger:
    - platform: sun
      event: sunset
  action:
    - service: scene.turn_on
      entity_id: scene.49347
    - service: homeassistant.turn_on
      entity_id: input_boolean.master_blinds_run_once
#########################################
- alias: open master blinds in the morning (after 45min of unoccupied bed)
  trigger:
    - platform: state
      entity_id: sensor.master_bed_people
      to: "nobody"
      for:
        minutes: 45
  condition:
    - condition: state
      entity_id: input_boolean.master_blinds_run_once
      state: "on"
    - condition: time
      before: "11:00:00"
      after: "06:00:00"
  action:
    - service: scene.turn_on
      entity_id: scene.10877
    - service: homeassistant.turn_off
      entity_id: input_boolean.master_blinds_run_once
#########################################
- alias: reset run-once variables - noon
  trigger:
    platform: time
    at: "12:00:00"
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.sunset_run_once
#########################################
- alias: "bedtime, set HVAC fans on, turn off recirc pump, all lights if no guests (only ext, lower, & main if guests), and main tv"
  trigger:
    - platform: state
      entity_id: binary_sensor.sleep_status
      to: "on"
  action:
    - service: scene.turn_on
      data_template:
        entity_id: >
          {% if is_state('input_boolean.guests', 'on') %}
            scene.equipment_room_enclosure_device_001_ph_main_lower_ext_off
          {% else %}
            scene.equipment_room_enclosure_device_001_ph_all_but_master
          {% endif %}
    - service: climate.set_fan_mode
      data:
        entity_id:
          - climate.basement_thermostat
          - climate.main_thermostat
          - climate.upstairs_thermostat
        fan_mode: "on"
    - service: homeassistant.turn_off
      entity_id: switch.equipment_room_recirculation_pump
    - service: webostv.command
      data:
        entity_id: media_player.living_room_tv
        command: "system/turnOff"
#########################################
- alias: "bedtime, garage check"
  trigger:
    - platform: state
      entity_id: binary_sensor.sleep_status
      to: "on"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.double_garage
        state: "Violated"
      - condition: state
        entity_id: sensor.single_garage
        state: "Violated"
  action:
    - service: notify.telegram_jon
      data_template:
        title: "Garage Door is Open!"
        message: "{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state }}!"
#########################################
- alias: "bedtime, doors unlocked and notify"
  trigger:
    - platform: state
      entity_id: binary_sensor.sleep_status
      to: "on"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: lock.front_door_lock
        state: "unlocked"
      - condition: state
        entity_id: lock.garage_door_lock
        state: "unlocked"
  action:
    - service: notify.telegram_jon
      data_template:
        title: "{{ states.sensor.doors_unlocked_number.state }} door(s) UNLOCKED!"
        message: "Locking {{ states.sensor.doors_unlocked.state }}"
    - service: script.lock_doors
#########################################
- alias: "done sleeping, HVAC fan off, recirculation pump on"
  trigger:
    - platform: state
      entity_id: binary_sensor.sleep_status
      to: "off"
  action:
    - service: climate.set_fan_mode
      data:
        entity_id:
          - climate.basement_thermostat
          - climate.main_thermostat
          - climate.upstairs_thermostat
        fan_mode: "auto"
    - service: homeassistant.turn_on
      entity_id: switch.equipment_room_recirculation_pump
#########################################
- alias: "away, turn the HVAC fans on, recirc pump and tvs off"
  trigger:
    - platform: state
      entity_id: binary_sensor.alarm_occupancy_status
      to: "off"
  action:
    - service: climate.set_fan_mode
      data:
        entity_id:
          - climate.basement_thermostat
          - climate.main_thermostat
          - climate.upstairs_thermostat
        fan_mode: "on"
    - service: homeassistant.turn_off
      entity_id: switch.equipment_room_recirculation_pump
    - service: script.tvs_off
#########################################
- alias: "away during the day, turn lights off"
  trigger:
    - platform: state
      entity_id: binary_sensor.alarm_occupancy_status
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "on"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_all_off
#########################################
- alias: "while on vacation, turn off all lights at 23:30"
  trigger:
    - platform: time
      at: "23:30:00"
  condition:
    - condition: state
      entity_id: binary_sensor.vacation_status
      state: "on"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_all_off
#########################################
- alias: home, turn the HVAC fans off & the recirc on, stop daisy cam timer
  trigger:
    - platform: state
      entity_id: binary_sensor.alarm_occupancy_status
      to: "on"
  action:
    - service: climate.set_fan_mode
      data:
        entity_id:
          - climate.basement_thermostat
          - climate.main_thermostat
          - climate.upstairs_thermostat
        fan_mode: "auto"
    - service: homeassistant.turn_on
      entity_id: switch.equipment_room_recirculation_pump
    - service: timer.cancel
      entity_id: timer.daisy_cam_timer
########################################
- alias: "turn on sunset lights at dark or sunset, set dark theme"
  trigger:
    - platform: state
      entity_id: binary_sensor.light_inside
      to: "off"
      for:
        minutes: 5
    - platform: sun
      event: sunset
  condition:
    - condition: state
      entity_id: input_boolean.sunset_run_once
      state: "off"
    - condition: state
      entity_id: input_boolean.motion_lights
      state: "on"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_sunset1
    - service: homeassistant.turn_on
      entity_id: input_boolean.sunset_run_once
    - service: frontend.set_theme
      data:
        name: aqua-fiesta
########################################
- alias: Turn on master fan at night (if AC is on)
  trigger:
    - platform: time
      at: "20:00:00"
  condition:
    - condition: state
      entity_id: climate.main_thermostat
      state: cool
    - condition: state
      entity_id: binary_sensor.vacation_status
      state: "off"
  action:
    - service: light.turn_on
      entity_id: light.master_bedroom_master_fan
########################################
- alias: Turn off master fan in the morning, enable normal theme
  trigger:
    - platform: time
      at: "08:00:00"
  action:
    - service: light.turn_off
      entity_id: light.master_bedroom_master_fan
    - service: frontend.set_theme
      data:
        name: google_light_theme
#########################################
- alias: "on vacation or armed away, check the front door lock"
  trigger:
    - platform: state
      entity_id: binary_sensor.vacation_status
      to: "on"
    - platform: state
      entity_id: sensor.armed_status
      to: "armed_away"
  condition:
    - condition: state
      entity_id: lock.front_door_lock
      state: "unlocked"
  action:
    - service: notify.telegram_jon
      data:
        title: "Front Door is UNLOCKED!"
        message: "Locking the front door"
    - service: lock.lock
      entity_id: lock.front_door_lock
#########################################
- alias: indoor humidity check - winter - see if its below the high threshold
  trigger:
    - platform: time
      at: "10:00:00"
  condition:
    - condition: template
      value_template: "{{ ( states.sensor.house_humidity.state  ) > ( states.sensor.target_humidity_max_winter.state ) }}"
  action:
    - service: notify.telegram_jon
      data_template:
        title: "Humidity Warning!"
        message: "Humidity in the house is too high: {{ states.sensor.house_humidity.state }}"
#########################################
- alias: indoor humidity check - winter - see if its above the low threshold
  trigger:
    - platform: time
      at: "10:01:00"
  condition:
    - condition: template
      value_template: "{{ ( states.sensor.house_humidity.state  ) < ( states.sensor.target_humidity_min_winter.state ) }}"
  action:
    - service: notify.telegram_jon
      data_template:
        title: "Humidity Warning!"
        message: "Humidity in the house is too low: {{ states.sensor.house_humidity.state }}"
#########################################
- alias: "water leak, notify, close the water valve, turn off recirc pump"
  trigger:
    - platform: state
      entity_id: binary_sensor.moisture_sensors
      to: "on"
  action:
    - service: homeassistant.turn_off
      data:
        entity_id:
          - switch.equipment_room_recirculation_pump
          - switch.water_main_shut_off
    - service: notify.telegram_jon
      data:
        title: "Water Leak!"
        message: "HomeAssistant detected a water leak"
#########################################
# dog walker here between 9:30-2pm (while the alarm is not disarmed)
- alias: "dog walker here"
  trigger:
    - platform: state
      entity_id: sensor.garage_door
      to: "Violated"
  condition:
    - condition: template
      value_template: "{{ not is_state('sensor.armed_status', 'disarmed') }}"
    - condition: time
      before: "14:00:00"
      after: "09:30:00"
  action:
    - service: script.video_daisy
#########################################
- alias: "fire active, unlock locks, send videos, lights set to 25%, hvac off, repeat notifications"
  trigger:
    - platform: state
      entity_id: sensor.alarm_state
      to: "fire_alarm"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.alarm_notifier
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_fire
    - service: lock.unlock
      data:
        entity_id:
          - lock.garage_door_lock
          - lock.front_door_lock
    - service: script.alarm
#########################################
- alias: "burglar active, lights on, send videos, repeat notifications"
  trigger:
    - platform: state
      entity_id: sensor.alarm_state
      to: "burglar_alarm"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_burglar
    - service: script.alarm
#########################################
- alias: "turn off alarm notifications b/c user interaction"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/turnoffnotification"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Disabling notifications for {{ trigger }}"
        show_alert: true
    - service: input_boolean.turn_off
      entity_id: input_boolean.alarm_notifier
########################################
- alias: master entry motion light - bed unoccupied
  trigger:
    platform: state
    entity_id: binary_sensor.master_entry_pir
    to: "on"
  condition:
    - condition: state
      entity_id: sensor.master_bed_people
      state: "nobody"
    - condition: state
      entity_id: input_boolean.motion_lights
      state: "on"
  action:
    - service: lifx.set_state
      data:
        entity_id: light.master_entry_lifx
        power: on
########################################
- alias: master entry motion light - bed occupied
  trigger:
    platform: state
    entity_id: binary_sensor.master_entry_pir
    to: "on"
  condition:
    - condition: template
      value_template: "{{ states.sensor.master_bed_people.state != 'nobody' }}"
    - condition: state
      entity_id: input_boolean.motion_lights
      state: "on"
  action:
    - service: lifx.set_state
      data:
        entity_id: light.master_entry_lifx
      data_template:
        power: on
########################################
- alias: Master entry motion lights Off
  trigger:
    - platform: state
      entity_id: binary_sensor.master_entry_pir
      to: "off"
      for:
        minutes: 10
  condition:
    - condition: state
      entity_id: input_boolean.master_override
      state: "off"
  action:
    - service: homeassistant.turn_off
      entity_id: light.master_entry_lifx
########################################
# sitting room light scenarios
# - motion in sitting while bed has nobody
# - sitting light on when chair occupied
# - no motion for a while (and chair unoccupied), turn off
# - sitting light off when bed occupied (& chair unoccupied)
# - sitting light off when chair unoccupied (& bed occupied)
########################################
- alias: sitting motion light - bed unoccupied
  trigger:
    platform: state
    entity_id: binary_sensor.sitting_room_pir
    to: "on"
  condition:
    - condition: state
      entity_id: sensor.master_bed_people
      state: "nobody"
    - condition: state
      entity_id: input_boolean.motion_lights
      state: "on"
  action:
    - service: homeassistant.turn_on
      entity_id: light.sitting_room_lifx
########################################
# - alias: sitting light on when chair occupied
#   trigger:
#     platform: state
#     entity_id: sensor.master_sitting_chair_occupied
#     from: "unoccupied"
#     to: "occupied"
#   condition:
#     - condition: state
#       entity_id: input_boolean.motion_lights
#       state: "on"
#   action:
#     - service: homeassistant.turn_on
#       entity_id: light.sitting_room_lifx
########################################
- alias: sitting motion light off
  trigger:
    - platform: state
      entity_id: binary_sensor.sitting_room_pir
      to: "off"
      for:
        minutes: 10
  # condition:
  #   - condition: state
  #     entity_id: sensor.master_sitting_chair_occupied
  #     state: "unoccupied"
  condition:
    - condition: state
      entity_id: input_boolean.master_override
      state: "off"
  action:
    - service: homeassistant.turn_off
      entity_id: light.sitting_room_lifx
########################################
- alias: sitting light off when bed occupied (& chair unoccupied)
  trigger:
    - platform: state
      entity_id: sensor.master_bed_people
      from: "nobody"
      to: "one"
    - platform: state
      entity_id: sensor.master_bed_people
      from: "nobody"
      to: "both"
  condition:
    - condition: state
      entity_id: sensor.master_sitting_chair_occupied
      state: "unoccupied"
  action:
    - service: homeassistant.turn_off
      entity_id: light.sitting_room_lifx
########################################
- alias: sitting light off when chair unoccupied (& bed occupied)
  trigger:
    - platform: state
      entity_id: sensor.master_sitting_chair_occupied
      from: "occupied"
      to: "unoccupied"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: sensor.master_bed_people
        state: "one"
      - condition: state
        entity_id: sensor.master_bed_people
        state: "both"
  action:
    - service: homeassistant.turn_off
      entity_id: light.sitting_room_lifx
########################################
- alias: kitchen off with no motion
  trigger:
    - platform: state
      entity_id: sensor.kitchen_pir
      to: "Normal"
      for:
        minutes: 15
  condition:
    - condition: state
      entity_id: input_boolean.block_all_motion_lights
      state: "off"
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_kitchen_off
########################################
- alias: daisy cam photo every 45 minutes when armed away and kennel closed
  trigger:
    - platform: state
      entity_id: binary_sensor.alarm_occupancy_status
      to: "off"
  condition:
    - condition: state
      entity_id: binary_sensor.daisy_contact
      state: "off"
    - condition: state
      entity_id: binary_sensor.vacation_status
      state: "off"
  action:
    - service: timer.start
      entity_id: timer.daisy_cam_timer
- alias: daisy timer completed
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.daisy_cam_timer
  condition:
    - condition: state
      entity_id: binary_sensor.alarm_occupancy_status
      state: "off"
    - condition: state
      entity_id: binary_sensor.daisy_contact
      state: "off"
  action:
    - service: script.video_daisy
    - service: timer.start
      entity_id: timer.daisy_cam_timer
#########################################
- alias: enable motion lights 2hours before sunset, disable 2hour after sunrise
  trigger:
    - platform: sun
      event: sunset
      offset: "-02:00:00"
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.motion_lights
- alias: disable motion lights 2hours sunrise
  trigger:
    - platform: sun
      event: sunrise
      offset: "+02:00:00"
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.motion_lights
########################################
- alias: kitchen motion light
  trigger:
    platform: state
    entity_id: binary_sensor.living_room_multi_motion
    to: "Violated"
  condition:
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "off"
    - condition: state
      entity_id: input_boolean.motion_lights
      state: "on"
  action:
    - service: homeassistant.turn_on
      entity_id: switch.kitchen_cabinets
########################################
- alias: basement off with no motion
  trigger:
    - platform: state
      entity_id: binary_sensor.basement_motions
      from: "on"
      to: "off"
      for:
        minutes: 30
  action:
    - service: scene.turn_on
      entity_id: scene.equipment_room_enclosure_device_001_ph_basement_off
########################################
- alias: "patio fan off"
  trigger:
    - platform: time
      at: "00:00:00"
    - platform: time
      at: "03:00:00"
    - platform: time
      at: "05:00:00"
    - platform: time
      at: "07:00:00"
  action:
    - service: rest_command.patio_fan_off
########################################
- alias: backyard party lights
  trigger:
    - platform: state
      entity_id: sensor.basement_door
      to: "Violated"
  condition:
    - condition: state
      entity_id: input_boolean.party
      state: "on"
  action:
    - service: scene.turn_on
      entity_id:
        - scene.basement_keypad_theater
        - scene.basement_keypad_bar
#########################################
- alias: "Elk Alarm trouble notification"
  trigger:
    - platform: state
      entity_id: sensor.alarm_trouble
  condition:
    - condition: template
      value_template: "{{ not is_state('sensor.alarm_trouble', '') }}"
  action:
    - service: notify.telegram_jon
      data_template:
        message: "{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state }}."
#########################################
- alias: doorbell notification event capture and notify
  trigger:
    - platform: event
      event_type: doorbird_front_door_doorbell
  action:
    - service: notify.telegram_jon
      data:
        message: "doorbell rang"
#########################################
- alias: "mqtt smartthings device_tracker workaround"
  trigger:
    - platform: state
      entity_id: binary_sensor.jon_gilmore_s_pixel_3_presence
  action:
    - service: mqtt.publish
      data_template:
        topic: "device_tracker/jon/state"
        payload_template: >
          {% if trigger.to_state.state == 'on' %}home
          {% else %}not_home
          {% endif %}
#########################################
# - alias: car wash
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.car_wash
#       to: "on"
#   condition:
#     # run once per 24hrs condition
#     - condition: template
#       value_template: >
#         {% if states.automation.car_wash.last_triggered is not none %}
#           {% if as_timestamp(now()) | int - as_timestamp(states.automation.car_wash.attributes.last_triggered) | int > 86400 %} true {% else %} false
#           {% endif %}
#         {% else %}
#         false
#         {% endif %}
#   action:
#     - service: notify.telegram_jon
#       data:
#         message: "OK to wash the car!"
#########################################
- alias: victorops notification - turn on light
  trigger:
    - platform: template
      value_template: "{{ 'com.victorops.androidclient' in states.sensor.pixel_3_ariela_notification_grabber_sensor.attributes['packageName'] }}"
  condition:
    - condition: template
      value_template: "{{ not is_state('sensor.period_of_day', 'day') }}"
    - condition: state
      entity_id: person.jon
      state: "home"
  action:
    - service: notify.telegram_jon
      data:
        message: "ALERT! Work page"
    - service: homeassistant.turn_on
      entity_id: light.master_bedroom_jons_lamp
#########################################
- alias: "general notifications"
  trigger:
    - platform: state
      entity_id:
        - switch.dishwasher
        - sensor.public_ip
        - binary_sensor.rain_sensor
    - platform: template
      value_template: "{{ not (is_state('sensor.alarm_state', 'no_alarm_active') or is_state('sensor.alarm_state', 'entrance_delay_active')) }}"
    - platform: state
      entity_id:
        - binary_sensor.office_multi_tamper
        - binary_sensor.kitchen_fridge_door_tamper
        - binary_sensor.updater
      to: "on"
    - platform: numeric_state
      entity_id: sensor.kitchen_fridge_door_temperature_measurement
      above: "44"
      for:
        minutes: 20
    - platform: numeric_state
      entity_id: sensor.kitchen_fridge_door_temperature_measurement
      below: "30"
      for:
        minutes: 20
    - platform: state
      entity_id: sensor.elkm1
      to: "Disconnected"
    - platform: numeric_state
      entity_id:
        - sensor.keypad004
        - sensor.master_entry_temperature
      above: "84"
      for:
        minutes: 15
    - platform: numeric_state
      entity_id:
        - sensor.keypad004
        - sensor.master_entry_temperature
      below: "55"
      for:
        minutes: 15
  action:
    - service: notify.telegram_jon
      data_template:
        message: "{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state }}."
#########################################
- alias: ups notifications
  trigger:
    - platform: event
      event_type: nut.ups_event
  action:
    - service: notify.telegram_jon
      data_template:
        message: "{{ trigger.event.data.notify_msg }}"
#########################################
- alias: important date (birthday & anniversary)
  trigger:
    - platform: time
      at: "07:00:00"
  action:
    - service: notify.telegram_jon
      data_template:
        title: "Important date closing in!"
        message: >
          {% for state in states if (('birthday' in state.entity_id or 'anniversary' in state.entity_id) and state.state | int == 14) %}
          {{state.name}}
          {% endfor %}
#########################################
# - alias: create group of groups (and exlude unwanted groups)
# # https://community.home-assistant.io/t/create-combinatoric-groups-including-and-excluding-entities-from-other-groups/121259
#   trigger:
#     - platform: homeassistant
#       event: start
#   action:
#     - service: script.group_set
#       data_template:
#         name: Test group
#         include:
#           - group.kids_room
#           - group.bedroom
#         exclude: group.night_lights,group.decorations
#########################################
- alias: create "all" groups
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: script.group_set
      data_template:
        object_id: all_locks
        name: All Locks
        types: "lock"
#########################################
- alias: Popup Camera
  trigger:
    - platform: state
      entity_id: light.master_bedroom_jons_lamp
      to: "on"
  action:
    - service: homeassistant.turn_on
      entity_id: light.wallpanel
    - service: script.popup_camera
      data:
        deviceID: "37a201ed-e63fb778"
        camera: "camera.front_door_live"
    - delay: "00:00:30"
    - service: browser_mod.close_popup
#########################################
- alias: "master override off"
  trigger:
    - platform: state
      entity_id: input_boolean.master_override
      to: "off"
  action:
    - service: homeassistant.turn_off
      entity_id:
        - light.master_bath_toekick
        - light.sitting_room_lifx
        - light.master_entry_lifx
#########################################
- alias: "basement stairs motion - timer start"
  trigger:
    - platform: state
      entity_id: sensor.basement_stairs_pir
      to: "Violated"
  action:
    - service: timer.start
      entity_id: timer.basement_stairs_timer
- alias: "basement lights on after stairs motion"
  trigger:
    - platform: state
      entity_id: sensor.bar_pir
      to: "Violated"
  condition:
    - condition: state
      entity_id: timer.basement_stairs_timer
      state: "active"
  action:
    - service: homeassistant.turn_on
      entity_id: switch.basement_main
#########################################
- alias: "storage, master toekick motion lights"
  trigger:
    - platform: state
      entity_id: sensor.storage_pir
      to: "Violated"
    - platform: state
      entity_id: sensor.storage_pir
      to: "Normal"
      for:
        minutes: 5
    - platform: state
      entity_id: binary_sensor.master_bedroom_occupancy
      to: "on"
    - platform: state
      entity_id: binary_sensor.master_bedroom_occupancy
      to: "off"
      for:
        minutes: 1
  action:
    - service_template: >
        {% if trigger.to_state.state in ['Violated', 'on'] %}homeassistant.turn_on
        {% else %}homeassistant.turn_off{% endif %}
      data_template:
        entity_id: >
          {% set trigger_entity = trigger.entity_id %}
          {% if trigger_entity == 'sensor.storage_pir' %}
            switch.basement_storage_lights
          {% elif trigger_entity == 'binary_sensor.master_bedroom_occupancy' %}
            light.master_bath_toekick
          {% endif %}
#########################################
- alias: "office desk, gym lights motion on"
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.office_occupancy
        - binary_sensor.gym_occupancy
      to: "on"
  condition:
    - condition: state
      entity_id: binary_sensor.light_inside
      state: "off"
  action:
    - service: homeassistant.turn_on
      data_template:
        entity_id: >
          {% set trigger_entity = trigger.entity_id %}
          {% if trigger_entity == 'binary_sensor.office_occupancy' %}
            switch.office_lights
          {% elif trigger_entity == 'binary_sensor.gym_occupancy' %}
            light.gym_cans
          {% endif %}
#########################################
- alias: "office desk, gym lights motion off"
  trigger:
    - platform: state
      entity_id: binary_sensor.office_occupancy
      to: "off"
      for:
        minutes: 2
    - platform: state
      entity_id: binary_sensor.gym_occupancy
      to: "off"
      for:
        minutes: 5
  action:
    - service: homeassistant.turn_off
      data_template:
        entity_id: >
          {% set trigger_entity = trigger.entity_id %}
          {% if trigger_entity == 'binary_sensor.office_occupancy' %}
            switch.office_lights
          {% elif trigger_entity == 'binary_sensor.gym_occupancy' %}
            light.gym_cans
          {% endif %}
