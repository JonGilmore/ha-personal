---
#########################################
- alias: "Person Detection: doorbell person detected"
  description: "If nobody is home or were sleeping - send a video of the doorbell"
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    - "{{ not(trigger.event.data.path.startswith('/share/trimmed-')) }}" # filename doesnt start with /share/trimmed-*
    - "{{ trigger.event.data.path.startswith('/share/doorbell-') }}" # filename starts with /share/doorbell-*
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_doorbell_person_detected', 'last_triggered')) |int(0) ) > 60 }}" # rate limit
    - condition: or # sleeping or away
      conditions:
        - condition: state
          entity_id: binary_sensor.sleep_status
          state: "on"
        - condition: state
          entity_id: person.jon
          state: "not_home"
  action:
    # trim the clip in case its really long, save to a static file
    - service: shell_command.trim_video
      data_template:
        clip: "{{ trigger.event.data.path }}"
        duration: "00:00:08"
        path: "/share/trimmed-doorbell.mp4"
    - service: telegram_bot.send_video
      data:
        file: "/share/trimmed-doorbell.mp4"
#########################################
- alias: "Person Detection: driveway person detected"
  description: "If nobody is home or were sleeping - send a video of the driveway"
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    - "{{ not(trigger.event.data.path.startswith('/share/trimmed-')) }}" # filename doesnt start with /share/trimmed-*
    - "{{ trigger.event.data.path.startswith('/share/driveway-') }}" # filename starts with /share/driveway-*
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_driveway_person_detected', 'last_triggered')) |int(0) ) > 60 }}" # rate limit
    - condition: or # sleeping or away
      conditions:
        - condition: state
          entity_id: binary_sensor.sleep_status
          state: "on"
        - condition: state
          entity_id: person.jon
          state: "not_home"
  action:
    # trim the clip in case its really long, save to a static file
    - service: shell_command.trim_video
      data_template:
        clip: "{{ trigger.event.data.path }}"
        duration: "00:00:08"
        path: "/share/trimmed-driveway.mp4"
    - service: telegram_bot.send_video
      data:
        file: "/share/trimmed-driveway.mp4"
#########################################
- alias: "Person Detection: deck person detected"
  description: "If nobody is home or were sleeping - send a video of the deck"
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    - "{{ not(trigger.event.data.path.startswith('/share/trimmed-')) }}" # filename doesnt start with /share/trimmed-*
    - "{{ trigger.event.data.path.startswith('/share/deck-') }}" # filename starts with /share/deck-*
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_deck_person_detected', 'last_triggered')) |int(0) ) > 60 }}" # rate limit
    - condition: or # sleeping or away
      conditions:
        - condition: state
          entity_id: binary_sensor.sleep_status
          state: "on"
        - condition: state
          entity_id: person.jon
          state: "not_home"
  action:
    # trim the clip in case its really long, save to a static file
    - service: shell_command.trim_video
      data_template:
        clip: "{{ trigger.event.data.path }}"
        duration: "00:00:08"
        path: "/share/trimmed-deck.mp4"
    - service: telegram_bot.send_video
      data:
        file: "/share/trimmed-deck.mp4"
#########################################
- alias: "Person Detection: deckstairs person detected"
  description: "If nobody is home or were sleeping - send a video of the deckstairs"
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    - "{{ not(trigger.event.data.path.startswith('/share/trimmed-')) }}" # filename doesnt start with /share/trimmed-*
    - "{{ trigger.event.data.path.startswith('/share/deckstairs-') }}" # filename starts with /share/deckstairs-*
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_deckstairs_person_detected', 'last_triggered')) |int(0) ) > 60 }}" # rate limit
    - condition: or # sleeping or away
      conditions:
        - condition: state
          entity_id: binary_sensor.sleep_status
          state: "on"
        - condition: state
          entity_id: person.jon
          state: "not_home"
  action:
    # trim the clip in case its really long, save to a static file
    - service: shell_command.trim_video
      data_template:
        clip: "{{ trigger.event.data.path }}"
        duration: "00:00:08"
        path: "/share/trimmed-deckstairs.mp4"
    - service: telegram_bot.send_video
      data:
        file: "/share/trimmed-deckstairs.mp4"
#########################################
- alias: "Person Detection: garage person detected"
  description: "If nobody is home or were sleeping - send a video of the garage"
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    - "{{ not(trigger.event.data.path.startswith('/share/trimmed-')) }}" # filename doesnt start with /share/trimmed-*
    - "{{ trigger.event.data.path.startswith('/share/garage-') }}" # filename starts with /share/garage-*
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_garage_person_detected', 'last_triggered')) |int(0) ) > 60 }}" # rate limit
    - condition: or # sleeping or away
      conditions:
        - condition: state
          entity_id: binary_sensor.sleep_status
          state: "on"
        - condition: state
          entity_id: person.jon
          state: "not_home"
  action:
    # trim the clip in case its really long, save to a static file
    - service: shell_command.trim_video
      data_template:
        clip: "{{ trigger.event.data.path }}"
        duration: "00:00:08"
        path: "/share/trimmed-garage.mp4"
    - service: telegram_bot.send_video
      data:
        file: "/share/trimmed-garage.mp4"
#########################################
- alias: "Person Detection: kitchen person detected"
  description: "If nobody is home - send a video of the kitchen"
  trigger:
    platform: event
    event_type: folder_watcher
    event_data:
      event_type: created
  condition:
    - "{{ not(trigger.event.data.path.startswith('/share/trimmed-')) }}" # filename doesnt start with /share/trimmed-*
    - "{{ trigger.event.data.path.startswith('/share/kitchen-') }}" # filename starts with /share/kitchen-*
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_kitchen_person_detected', 'last_triggered')) |int(0) ) > 60 }}" # rate limit
    - condition: or # sleeping or away
      conditions:
        - condition: state
          entity_id: binary_sensor.sleep_status
          state: "on"
        - condition: state
          entity_id: person.jon
          state: "not_home"
  action:
    # trim the clip in case its really long, save to a static file
    - service: shell_command.trim_video
      data_template:
        clip: "{{ trigger.event.data.path }}"
        duration: "00:00:08"
        path: "/share/trimmed-kitchen.mp4"
    - service: telegram_bot.send_video
      data:
        file: "/share/trimmed-kitchen.mp4"
#########################################
# - alias: "Person Detection: testing person picture"
#   trigger:
#     - platform: state
#       entity_id:
#         - binary_sensor.deck_person_motion
#         - binary_sensor.deckstairs_person_motion
#         - binary_sensor.doorbell_person_motion
#         # - binary_sensor.driveway_person_motion
#         # - binary_sensor.garage_person_motion
#         # - binary_sensor.kitchen_person_motion
#         # - binary_sensor.loft_person_motion
#       from: "off"
#       to: "on"
#   condition:
#     - condition: state
#       entity_id: person.jon
#       state: "not_home"
#   action:
#     - data_template:
#         entity_id: "camera.{{ trigger.to_state.object_id }}" # ex: camera.deck_person
#         filename: "/config/www/{{ trigger.to_state.object_id }}.jpg }}"
#       service: camera.snapshot
#     - service: notify.telegram_jon
#       data_template:
#         message: "message placeholder"
#         data:
#           photo:
#             - file: "/config/www/{{ trigger.to_state.object_id }}.jpg }}"
#               caption: "{{ trigger.to_state.attributes.friendly_name }}"
#########################################
# - alias: "Person Detection: notify of events"
#   description: "testing notifications"
#   trigger:
#     platform: mqtt
#     topic: frigate/events
#   condition:
#     # - "{{ trigger.payload_json['after']['label'] == 'person' }}"
#     - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.person_detection_notify_of_events', 'last_triggered')) |int(0) ) > 45 }}"
#   action:
#     - data_template:
#         entity_id: "camera.{{ trigger.to_state.object_id }}" # ex: camera.deck_person
#         filename: "/config/www/{{ trigger.to_state.object_id }}.jpg }}"
#       service: camera.snapshot
#     - service: notify.telegram_jon
#       data_template:
#         message: 'A {{trigger.payload_json["after"]["label"]}} was detected.'
#         data:
#           photo:
#             - file: "/config/www/{{ trigger.to_state.object_id }}.jpg }}"
#               caption: "{{ trigger.to_state.attributes.friendly_name }}"
#########################################
# - alias: "Person Detection: driveway or porch person - telegram & tv notify"
#   description: "When a person is detected on the driveway or porch - notify via telegram and LG TV"
#   trigger:
#     - platform: state
#       entity_id:
#         - binary_sensor.doorbell_person_motion
#         - binary_sensor.driveway_person_motion
#       from: "off"
#       to: "on"
#   action:
#     - data_template:
#         entity_id: "camera.{{ trigger.to_state.object_id }}" # ex: camera.deck_person
#         filename: "/config/www/{{ trigger.to_state.object_id }}.jpg }}"
#       service: camera.snapshot
#     - service: notify.living_room_tv
#       data_template:
#         message: "{{ trigger.to_state.attributes.friendly_name }} detected"
#         data:
#           icon: "/config/www/{{ trigger.to_state.object_id }}.jpg }}"
#     - service: notify.telegram_jon
#       data_template:
#         title: "{{ trigger.to_state.attributes.friendly_name }}"
#         message: "{{ trigger.to_state.attributes.friendly_name }}"
#         data:
#           photo:
#             url: >
#               {% if trigger.entity_id == 'binary_sensor.driveway_person_motion' %}
#                 {{ states.sensor.hik_driveway_pic.state }}
#               {% elif trigger.entity_id == 'binary_sensor.doorbell_person_motion' %}
#                 {{ states.sensor.db_pic.state }}
#               {% endif %}
#########################################
- alias: "Frigate: disable driveway notifications because of user interaction"
  description: "options to mute notifications for 60m or the rest of the day"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/mutefrigatedriveway60"
    - platform: event
      event_type: telegram_callback
      event_data:
        data: "/mutefrigatedrivewayday"
  action:
    - choose:
        - conditions: "{{ trigger.event.data.command == '\/mutefrigatedriveway60' }}"
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: "Disabling notifications for {{ trigger }} for 60min"
                show_alert: true
            - service: input_boolean.turn_off
              entity_id: input_boolean.frigate_driveway_notifier
            - delay: "00:60:00"
            - service: input_boolean.turn_on
              entity_id: input_boolean.frigate_driveway_notifier
      default:
        - service: telegram_bot.answer_callback_query
          data_template:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: "Disabling notifications for {{ trigger }} for the remainder of the day"
            show_alert: true
        - service: input_boolean.turn_off
          entity_id: input_boolean.frigate_driveway_notifier
#########################################
- alias: "Frigate: driveway notification"
  description: "only notify for `new` events with a 90s rate limit, optionally mute notifications for 60m with telegram callback"
  trigger:
    - platform: mqtt
      topic: frigate/events
  condition:
    - "{{ trigger.payload_json['type'] == 'new' }}" # only for new events
    - "{{ 'near' in trigger.payload_json['after']['entered_zones'] }}" # only for objects entering the `near` zone
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.frigate_driveway_notification', 'last_triggered')) |int(0) ) > 90 }}" # rate limit
    - condition: state # make sure notifications havent been paused from an actionable notification
      entity_id: input_boolean.frigate_driveway_notifier
      state: "on"
    - condition: or # only driveway camera
      conditions:
        - "{{ trigger.payload_json['after']['camera'] == 'driveway' }}"
        - "{{ trigger.payload_json['before']['camera'] == 'driveway' }}"
  action:
    - service: system_log.write
      data_template:
        message: "{{trigger.payload_json}}"
        level: info
    - service: notify.telegram_jon
      data_template:
        message: "A {{trigger.payload_json['after']['label']}} was detected."
        data:
          inline_keyboard:
            - "60m:/mutefrigatedriveway60, Rest of day:/mutefrigatedrivewayday"
          photo:
            - url: "http://192.168.45.249:5000/api/events/{{trigger.payload_json['after']['id']}}/thumbnail.jpg"
              caption: "{{trigger.payload_json['after']['label']}} detected. Mute?"
