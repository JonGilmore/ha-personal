---
#########################################
- alias: "Frigate: disable notifications because of user interaction"
  id: "Frigate: disable notifications because of user interaction"
  description: "options to mute notifications for 60m or the rest of the day"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        command: "/mutefrigatedriveway60"
    - platform: event
      event_type: telegram_callback
      event_data:
        command: "/mutefrigatedrivewayday"
    - platform: event
      event_type: telegram_callback
      event_data:
        command: "/mutefrigatekitchen60"
    - platform: event
      event_type: telegram_callback
      event_data:
        command: "/mutefrigatekitchenday"
  action:
    - choose:
        - conditions: "{{ trigger.event.data.command == '\/mutefrigatedriveway60' }}"
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: "Disabling notifications for {{ trigger }} for 60min"
                show_alert: true
            - service: input_boolean.turn_off
              entity_id: input_boolean.frigate_driveway_notifier
            - delay: "00:60:00"
            - service: input_boolean.turn_on
              entity_id: input_boolean.frigate_driveway_notifier
        - conditions: "{{ trigger.event.data.command == '\/mutefrigatekitchen60' }}"
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: "Disabling notifications for {{ trigger }} for 60min"
                show_alert: true
            - service: input_boolean.turn_off
              entity_id: input_boolean.frigate_kitchen_notifier
            - delay: "00:60:00"
            - service: input_boolean.turn_on
              entity_id: input_boolean.frigate_kitchen_notifier
        - conditions: "{{ trigger.event.data.command == '\/mutefrigatekitchenday' }}"
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: "Disabling notifications for {{ trigger }} for the remainder of the day"
                show_alert: true
            - service: input_boolean.turn_off
              entity_id: input_boolean.frigate_driveway_notifier
      default:
        - service: telegram_bot.answer_callback_query
          data_template:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: "Disabling notifications for {{ trigger }} for the remainder of the day"
            show_alert: true
        - service: input_boolean.turn_off
          entity_id: input_boolean.frigate_driveway_notifier
#########################################
- alias: "Frigate: driveway arrival"
  id: "Frigate: driveway arrival"
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.far_person_motion
        - binary_sensor.far_car_motion
      to: "on"
  action:
    - wait_for_trigger:
        - platform: state
          entity_id:
            - binary_sensor.near_car_motion
            - binary_sensor.near_person_motion
          to: "on"
      timeout: 20
      continue_on_timeout: false
    - service: notify.telegram_jon
      data_template:
        title: "{{ trigger.to_state.attributes.friendly_name }}"
        message: "{{ trigger.to_state.attributes.friendly_name }}"
        data:
          photo:
            url: "{{ states.sensor.hik_driveway_pic.state }}"
#########################################
- alias: "Frigate: driveway departure"
  id: "Frigate: driveway departure"
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.near_car_motion
        - binary_sensor.near_person_motion
      to: "on"
  action:
    - wait_for_trigger:
        - platform: state
          entity_id:
            - binary_sensor.far_person_motion
            - binary_sensor.far_car_motion
          to: "on"
      timeout: 20
      continue_on_timeout: false
    - choose: # between the hours of 6-8am, turn on driveway sentry mode
        - conditions: "{{ now().strftime('%H')|int > 6 and now().strftime('%H')|int < 8 }}"
          sequence:
            - service: homeassistant.turn_on
              entity_id: input_boolean.driveway_sentry
#########################################
- alias: "Frigate: driveway video notification"
  id: "Frigate: driveway video notification"
  description: "if Jons away or were asleep - send a video of the driveway"
  trigger:
    - platform: mqtt
      topic: frigate/events
  condition:
    - "{{ trigger.payload_json['type'] == 'end' }}"
    - "{{ trigger.payload_json['after']['has_clip'] == 'true' }}"
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.frigate_driveway_sentry_notification', 'last_triggered')) |int(0) ) > 90 }}" # rate limit
    - condition: state # make sure notifications havent been paused from an actionable notification
      entity_id: input_boolean.frigate_driveway_notifier
      state: "on"
    - condition: state
      entity_id: input_boolean.driveway_sentry
      state: "on"
    - condition: or # only driveway camera
      conditions:
        - "{{ trigger.payload_json['after']['camera'] == 'driveway' }}"
        - "{{ trigger.payload_json['before']['camera'] == 'driveway' }}"
  variables:
    camera: "{{ trigger.payload_json['after']['camera'] }}"
  action:
    # download & trim the clip in case its really long, save to a static file
    - service: shell_command.download_file
      data_template:
        url: "http://192.168.45.249:5005/api/events/{{trigger.payload_json['after']['id']}}/clip.mp4"
        download: "/share/{{camera}}.mp4"
    - service: shell_command.trim_video
      data_template:
        duration: "00:00:10"
        clip: "/share/{{camera}}.mp4"
        path: "/share/trimmed-{{camera}}.mp4"
    - service: telegram_bot.send_video
      data_template:
        file: "/share/trimmed-{{camera}}.mp4"
        inline_keyboard:
          - "60m:/mutefrigatedriveway60, Rest of day:/mutefrigatedrivewayday"
        caption: "{{trigger.payload_json['after']['label']}} detected. Mute?"
#########################################
- alias: "Frigate: kitchen video notification"
  id: "Frigate: kitchen video notification"
  description: "if everybody is away - send a video of the kitchen"
  trigger:
    - platform: mqtt
      topic: frigate/events
  condition:
    - "{{ trigger.payload_json['type'] == 'end' }}"
    - "{{ trigger.payload_json['after']['has_clip'] == true }}"
    - "{{ ( as_timestamp(now()) - as_timestamp(state_attr('automation.frigate_kitchen_video_notification', 'last_triggered')) |int(0) ) > 90 }}" # rate limit
    - condition: state # make sure notifications havent been paused from an actionable notification
      entity_id: input_boolean.frigate_kitchen_notifier
      state: "on"
    - condition: state
      entity_id: binary_sensor.anybody_home
      state: "off"
    - condition: or # only kitchen camera
      conditions:
        - "{{ trigger.payload_json['after']['camera'] == 'kitchen' }}"
        - "{{ trigger.payload_json['before']['camera'] == 'kitchen' }}"
  variables:
    camera: "{{ trigger.payload_json['after']['camera'] }}"
  action:
    # download & trim the clip in case its really long, save to a static file
    - service: shell_command.download_file
      data_template:
        url: "http://192.168.45.249:5005/api/events/{{trigger.payload_json['after']['id']}}/clip.mp4"
        download: "/share/{{camera}}.mp4"
    - service: shell_command.trim_video
      data_template:
        duration: "00:00:10"
        clip: "/share/{{camera}}.mp4"
        path: "/share/trimmed-{{camera}}.mp4"
    - service: telegram_bot.send_video
      data_template:
        file: "/share/trimmed-{{camera}}.mp4"
        inline_keyboard:
          - "60m:/mutefrigatekitchen60, Rest of day:/mutefrigatekitchenday"
        caption: "{{trigger.payload_json['after']['label']}} detected. Mute?"
