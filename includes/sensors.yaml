---
# Get the mean value of the different humidity sensors
- platform: min_max
  name: House Humidity
  round_digits: 0
  type: mean
  entity_ids:
    - sensor.office_multi_relative_humidity_measurement
    - sensor.basement_multi_relative_humidity_measurement
    - sensor.evelyn_multi_relative_humidity_measurement
    - sensor.loft_multi_relative_humidity_measurement
    - sensor.gym_humidity
    - sensor.nursery_humidity
    - sensor.master_entry_humidity
    - sensor.sunroom_humidity

# Template Sensors
- platform: template
  sensors:
    armed_status:
      value_template: '{{ states.alarm_control_panel.house.attributes["armed_status"] }}'
      friendly_name: "House Armed Status"
      unique_id: armed_status
    arm_up_state:
      value_template: '{{ states.alarm_control_panel.house.attributes["arm_up_state"] }}'
      friendly_name: "House Arm Up State"
      unique_id: arm_up_state
    alarm_state:
      value_template: '{{ states.alarm_control_panel.house.attributes["alarm_state"] }}'
      friendly_name: "House Alarm State"
      unique_id: alarm_state
    alarm_trouble:
      value_template: '{{ states.sensor.elkm1.attributes["system_trouble_status"] }}'
      friendly_name: "Alarm Trouble"
      unique_id: alarm_trouble
    garage_double_state:
      value_template: >-
        {% if states.sensor.double_garage.state == 'Normal' %}closed
        {% elif states.sensor.double_garage.state == 'Violated' %}open
        {% else %}unknown{% endif %}
      friendly_name: "Garage Double State"
      unique_id: garage_double_state
    garage_single_state:
      value_template: >-
        {% if states.sensor.single_garage.state == 'Normal' %}closed
        {% elif states.sensor.single_garage.state == 'Violated' %}open
        {% else %}unknown{% endif %}
      friendly_name: "Garage Single State"
      unique_id: garage_single_state
    garage_temperature:
      value_template: '{{ states.climate.garage_thermostat.attributes["current_temperature"] }}'
      friendly_name: "Garage Temperature"
      device_class: temperature
      unique_id: garage_temperature
    sun_elevation:
      value_template: '{{ states.sun.sun.attributes["elevation"] }}'
      friendly_name: "sun elevation"
      unique_id: sun_elevation
    garage_fridge_power:
      value_template: '{{ states.switch.garage_fridge.attributes["current_power_w"] }}'
      friendly_name: "Garage Fridge Power"
      device_class: power
      unique_id: garage_fridge_power
    garage_fridge_energy:
      value_template: '{{ states.switch.garage_fridge.attributes["today_energy_kwh"] }}'
      friendly_name: "Garage Fridge Energy"
      device_class: power
      unique_id: garage_fridge_energy
    sensor_count:
      friendly_name: "Number of Sensors"
      value_template: >
        {%- set domains = ['sensor'] -%}
        {%- for domain in domains -%}
          {%- for item in states[domain] -%}
            {% if loop.first %}
              {{loop.length}}
            {% endif %}
          {%- endfor -%}
        {%- endfor -%}
      unique_id: sensor_count
    lights_on_number:
      friendly_name: Lights On
      unit_of_measurement: "On"
      value_template: "{{ states.light|selectattr('state', 'equalto', 'on')|list|length }}"
      unique_id: lights_on_number
    doors_locked:
      friendly_name: Doors Locked
      value_template: "{{ states.lock|selectattr('state', 'equalto', 'locked')|list|map(attribute='name')| list|join(', ') }}"
      unique_id: doors_locked
    doors_locked_entities:
      friendly_name: Doors Locked Entities
      value_template: "{{ states.lock|selectattr('state', 'equalto', 'locked')|list|map(attribute='entity_id')| list|join(', ') }}"
      unique_id: doors_locked_entities
    doors_locked_number:
      friendly_name: Number of Doors Locked
      value_template: "{{ states.lock|selectattr('state', 'equalto', 'locked')|list|length }}"
      unique_id: doors_locked_number
    doors_unlocked:
      friendly_name: Doors Unlocked
      value_template: "{{ states.lock|selectattr('state', 'equalto', 'unlocked')|list|map(attribute='name')| list|join(', ') }}"
      unique_id: doors_unlocked
    doors_unlocked_entities:
      friendly_name: Doors Unlocked Entities
      value_template: "{{ states.lock|selectattr('state', 'equalto', 'unlocked')|list|map(attribute='entity_id')| list|join(', ') }}"
      unique_id: doors_unlocked_entities
    doors_unlocked_number:
      friendly_name: Number of Doors Unlocked
      value_template: "{{ states.lock|selectattr('state', 'equalto', 'unlocked')|list|length }}"
      unique_id: doors_unlocked_number
    people_home:
      friendly_name: People Home
      value_template: "{{ states.person|selectattr('state', 'equalto', 'home')|list|map(attribute='name')| list|join(', ') }}"
      unique_id: people_home
    people_home_number:
      friendly_name: Number of People Home
      value_template: "{{ states.person|selectattr('state', 'equalto', 'home')|list|length }}"
      unique_id: people_home_number
    db_pic:
      value_template: !secret db_pic
    hik_driveway_pic:
      value_template: !secret hik_driveway_pic
    hik_deck_pic:
      value_template: !secret hik_deck_pic
    hik_deckstairs_pic:
      value_template: !secret hik_deckstairs_pic
    hik_daisy_pic:
      value_template: !secret hik_daisy_pic
    camera_garage_pic:
      value_template: !secret camera_garage_pic
    cam_driveway_vid:
      value_template: !secret cam_driveway_vid
    cam_deck_vid:
      value_template: !secret cam_deck_vid
    cam_deckstairs_vid:
      value_template: !secret cam_deckstairs_vid
    cam_daisy_vid:
      value_template: !secret cam_daisy_vid
    cam_garage_vid:
      value_template: !secret cam_garage_vid
    cam_doorbell_vid:
      value_template: !secret cam_doorbell_vid
    cam_kitchen_vid:
      value_template: !secret cam_kitchen_vid

# DARK SKY
- platform: darksky
  api_key: !secret darksky_api
  forecast:
    - 0
    - 1
    - 2
  monitored_conditions:
    - summary
    - icon
    - nearest_storm_distance
    - nearest_storm_bearing
    - precip_type
    - precip_intensity
    - precip_probability
    - temperature
    - apparent_temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
    - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_high
    - temperature_low
    - apparent_temperature_high
    - apparent_temperature_low
    - precip_intensity_max
    - sunrise_time
    - sunset_time

# # # DARKNESS SENSORS
- platform: template
  sensors:
    period_of_day:
      friendly_name: "period of the day"
      value_template: >-
        {% if   (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}dusk
        {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}dawn
        {% elif (states.sun.sun.attributes.elevation) < -4 %}night
        {% else %}day
        {% endif %}
      icon_template: >-
        {% if   (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}mdi:weather-sunset-down
        {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}mdi:weather-sunset-up
        {% elif (states.sun.sun.attributes.elevation) < -4 %}mdi:weather-night
        {% else %}mdi:weather-sunny
        {% endif %}

# Target Humidity States
- platform: template
  sensors:
    target_humidity_max_winter:
      value_template: >-
        {% if   states.sensor.dark_sky_temperature.state | int < -20 %}25
        {% elif states.sensor.dark_sky_temperature.state | int < -10 %}30
        {% elif states.sensor.dark_sky_temperature.state | int <   0 %}35
        {% elif states.sensor.dark_sky_temperature.state | int <  10 %}40
        {% elif states.sensor.dark_sky_temperature.state | int <  20 %}45
        {% else %} 55 {% endif %}
      friendly_name: "Target Humidity - Max"
      device_class: humidity
    target_humidity_min_winter:
      value_template: >-
        {% if   states.sensor.dark_sky_temperature.state | int < -20 %}15
        {% elif states.sensor.dark_sky_temperature.state | int < -10 %}20
        {% elif states.sensor.dark_sky_temperature.state | int <   0 %}25
        {% elif states.sensor.dark_sky_temperature.state | int <  10 %}30
        {% elif states.sensor.dark_sky_temperature.state | int <  20 %}35
        {% else %} 40 {% endif %}
      friendly_name: "Target Humidity - Min"
      device_class: humidity

# HVAC tracking
- platform: history_stats
  name: daily hvac heat on time
  entity_id: binary_sensor.hvac_heat
  state: "on"
  type: time
  end: "{{ now() }}"
  duration:
    hours: 24
- platform: history_stats
  name: daily hvac heat on count
  entity_id: binary_sensor.hvac_heat
  state: "on"
  type: count
  end: "{{ now() }}"
  duration:
    hours: 24

- platform: history_stats
  name: daily hvac ac on time
  entity_id: binary_sensor.hvac_ac
  state: "on"
  type: time
  end: "{{ now() }}"
  duration:
    hours: 24
- platform: history_stats
  name: daily hvac ac on count
  entity_id: binary_sensor.hvac_ac
  state: "on"
  type: count
  end: "{{ now() }}"
  duration:
    hours: 24

- platform: history_stats
  name: daily hvac on time
  entity_id: binary_sensor.hvac
  state: "on"
  type: time
  end: "{{ now() }}"
  duration:
    hours: 24
- platform: history_stats
  name: daily hvac on count
  entity_id: binary_sensor.hvac
  state: "on"
  type: count
  end: "{{ now() }}"
  duration:
    hours: 24
- platform: history_stats
  name: daily hvac duty cycle
  entity_id: binary_sensor.hvac
  state: "on"
  type: ratio
  end: "{{ now() }}"
  duration:
    hours: 24

# LOAD SENSORS
# - platform: template
#   sensors:
#     master_bed_occupied:
#       value_template: >-
#         {% if (states.binary_sensor.sleepnumber_firmness_control_sleepiq_dual_boxed_jon_is_in_bed.state == "on")
#         or (states.binary_sensor.sleepnumber_firmness_control_sleepiq_dual_boxed_laura_is_in_bed.state == "on") %}occupied
#         {% else %} unoccupied {% endif %}
#       friendly_name: "Master Bed Occupied"
#     master_bed_people:
#       value_template: >-
#         {% if (states.binary_sensor.sleepnumber_firmness_control_sleepiq_dual_boxed_jon_is_in_bed.state == "on")
#         and (states.binary_sensor.sleepnumber_firmness_control_sleepiq_dual_boxed_laura_is_in_bed.state == "on") %}both
#         {% elif (states.binary_sensor.sleepnumber_firmness_control_sleepiq_dual_boxed_jon_is_in_bed.state == "on")
#         or (states.binary_sensor.sleepnumber_firmness_control_sleepiq_dual_boxed_laura_is_in_bed.state == "on") %}one
#         {% else %} nobody {% endif %}
#       friendly_name: "Master Bed People"

- platform: version
  name: HA Version
  scan_interval: 86400

- platform: websocket_api

- platform: command_line
  name: Public IP
  command: "dig +short myip.opendns.com @resolver1.opendns.com"
  scan_interval: 1800

- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone2/temp"
  value_template: "{{ value | multiply(0.001) | round(2) }}"
  unit_of_measurement: "°C"
  scan_interval: 600

- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: last_boot
- platform: uptime

# - platform: nut
#   name: "TrippLite"
#   host: a0d7b954-nut
#   username: !secret nut_usr
#   password: !secret nut_pwd
#   resources:
#     - battery.charge
#     - battery.runtime
#     - ups.load
#     - ups.status

# rtl_433 sensors
- platform: mqtt
  name: Nursery Temperature
  state_topic: "rtl_433/Acurite-Tower/4303"
  unit_of_measurement: "°F"
  value_template: "{{ value_json.temperature_F }}"
- platform: mqtt
  name: Nursery Humidity
  state_topic: "rtl_433/Acurite-Tower/4303"
  unit_of_measurement: "%"
  value_template: "{{ value_json.humidity }}"
- platform: mqtt
  name: Gym Temperature
  state_topic: "rtl_433/Acurite-Tower/14641"
  unit_of_measurement: "°F"
  value_template: "{{ value_json.temperature_F }}"
- platform: mqtt
  name: Gym Humidity
  state_topic: "rtl_433/Acurite-Tower/14641"
  unit_of_measurement: "%"
  value_template: "{{ value_json.humidity }}"
- platform: mqtt
  name: Kitchen Freezer Temperature
  state_topic: "rtl_433/Acurite-986/15488"
  unit_of_measurement: "°F"
  value_template: "{{ value_json.temperature_F }}"
- platform: mqtt
  name: Kitchen Fridge Temperature
  state_topic: "rtl_433/Acurite-986/37649"
  unit_of_measurement: "°F"
  value_template: "{{ value_json.temperature_F }}"
- platform: mqtt
  name: Bar Freezer Temperature
  state_topic: "rtl_433/Acurite-986/50597"
  unit_of_measurement: "°F"
  value_template: "{{ value_json.temperature_F }}"
- platform: mqtt
  name: Bar Fridge Temperature
  state_topic: "rtl_433/Acurite-986/17933"
  unit_of_measurement: "°F"
  value_template: "{{ value_json.temperature_F }}"

# rtl_915 sensors
- platform: mqtt
  name: Water Meter
  state_topic: "rtl_915/SCM_/68242959"
  unit_of_measurement: "Gallons"
  value_template: "{{ value_json.Consumption }}"
- platform: mqtt
  name: Gas Meter
  state_topic: "rtl_915/ERT-SCM/48150945"
  unit_of_measurement: "M3"
  value_template: "{{ value_json.consumption_data }}"

- platform: time_date
  display_options:
    - "time"
    - "date"
    - "date_time"
    - "date_time_iso"
    - "time_date"
    - "time_utc"
    - "beat"
- platform: season

- platform: template
  sensors:
    # WEATHER TEMPLATES
    current_temperature:
      friendly_name: Current Temperature
      value_template: >-
        {{ states('sensor.dark_sky_temperature') | round | int }}°
    current_feels:
      friendly_name: Current Feels Like
      value_template: >-
        feels like {{ states('sensor.dark_sky_apparent_temperature') | round | int }}°
    cloud_cover:
      friendly_name: Cloud Cover
      value_template: >-
        current cloud cover is {{ states('sensor.dark_sky_cloud_coverage') | round | int }}%
    nearest_storm:
      friendly_name: Nearest Storm
      value_template: >-
        nearest storm is {{ states('sensor.dark_sky_nearest_storm_distance') }} mi. away
    forecast_summary:
      friendly_name: Forecast
      value_template: >-
        {{ states('sensor.dark_sky_minutely_summary') }}
    current_humidity:
      friendly_name: Current Humidity
      value_template: >-
        {{ states('sensor.dark_sky_humidity') | round | int }}%
    daily_high:
      friendly_name: Today's High
      value_template: >-
        {{ states('sensor.dark_sky_daily_high_temperature_0d') | round | int }}°
    daily_low:
      friendly_name: Today's Low
      value_template: >-
        {{ states('sensor.dark_sky_daily_low_temperature_0d') | round | int }}°
    precipitation:
      friendly_name: Precipitation Detected
      value_template: >-
        {{ states('sensor.dark_sky_precip') | regex_replace(find='unknown', replace='none', ignorecase=true) }} detected
    precipitation_amount:
      friendly_name: Precipitation Amount
      value_template: >-
        {{ states('sensor.dark_sky_precip_intensity') | round(2, 'ceil') }} in. per hour
    precipitation_prob:
      friendly_name: Precipitation Probability
      value_template: >-
        probability: {{ states('sensor.dark_sky_precip_probability') | round | int }}%
    sunrise_today:
      friendly_name: "Sunrise Today"
      value_template: "{% set state = states('sensor.dark_sky_sunrise_0d') %}
        {{ strptime(state, '%Y-%m-%d %H:%M:%S')
        .replace(tzinfo=utcnow().tzinfo).astimezone(now().tzinfo) .strftime('%I:%M %p') }}"
    sunrise_tomorrow:
      friendly_name: "Sunrise Tomorrow"
      value_template: "{% set state = states('sensor.dark_sky_sunrise_1d') %}
        {{ strptime(state, '%Y-%m-%d %H:%M:%S')
        .replace(tzinfo=utcnow().tzinfo).astimezone(now().tzinfo) .strftime('%I:%M %p') }}"
    sunset_today:
      friendly_name: "Sunset Today"
      value_template: "{% set state = states('sensor.dark_sky_sunset_0d') %}
        {{ strptime(state, '%Y-%m-%d %H:%M:%S')
        .replace(tzinfo=utcnow().tzinfo).astimezone(now().tzinfo) .strftime('%I:%M %p') }}"
    sunset_tomorrow:
      friendly_name: "Sunset Tomorrow"
      value_template: "{% set state = states('sensor.dark_sky_sunset_1d') %}
        {{ strptime(state, '%Y-%m-%d %H:%M:%S')
        .replace(tzinfo=utcnow().tzinfo).astimezone(now().tzinfo) .strftime('%I:%M %p') }}"
    # AIR QUALITY TEMPLATES
    today_aqi:
      entity_id: sensor.u_s_air_quality_index
      friendly_name: "Today's AQI"
      value_template: >-
        {{ states('sensor.u_s_air_quality_index') }}
    today_allergy:
      entity_id: sensor.allergy_index_today
      friendly_name: "Today's Allergy Index"
      value_template: >-
        {{ states('sensor.allergy_index_today') }}
    allergy_trend:
      friendly_name: "Allergy Trend"
      value_template: >-
        {{ state_attr('sensor.allergy_index_forecasted_average', 'trend') }}
    allergy_level:
      friendly_name: "Allergy Level"
      value_template: >-
        {{ state_attr('sensor.allergy_index_today', 'rating') }}
    current_uv:
      entity_id: sensor.current_uv_index
      friendly_name: "Current UV Index"
      value_template: >-
        {{ states('sensor.current_uv_index') | round (1, 'common') }}

    # TIME AND DATE TEMPLATES
    today_text:
      entity_id: sensor.date
      friendly_name: "Today is"
      value_template: "{{ now().strftime('%A / %B %d') }}"
    today_clock:
      entity_id: sensor.time
      friendly_name: "Today is"
      value_template: "{{ now().strftime('%A / %B %d / %I:%M %p') }}"
    clock:
      entity_id: sensor.time
      friendly_name: "Time is"
      value_template: "{{ now().strftime('%I:%M %p') }}"
    events_today:
      friendly_name: "Events Today"
      value_template: >
        {% set count = namespace(value=0) %}
        {%- for state in states.sensor -%}
          {%- if state.attributes.attribution == "Sensor data calculated by Anniversaries Integration" and state.state | int <= 0 -%}
            {%- if count.value != 0 %},{% endif %}
            {{state.attributes.friendly_name}} is turning {{state.attributes.years_at_next_anniversary }}
            {%- set count.value = count.value + 1 -%}
          {%- endif -%}
        {%- endfor %}
    events_tomorrow:
      friendly_name: "Events Tomorrow"
      value_template: >-
        {% set count = namespace(value=0) %}
        {%- for state in states.sensor -%}
          {%- if state.attributes.attribution == "Sensor data calculated by Anniversaries Integration" and state.state | int <= 1 -%}
            {%- if count.value != 0 %},{% endif %}
            {{state.attributes.friendly_name}} is turning {{state.attributes.years_at_next_anniversary }}
            {%- set count.value = count.value + 1 -%}
          {%- endif -%}
        {%- endfor %}

    #THERMOSTAT TEMPLATES
    main_status:
      friendly_name: Main Floor Status
      value_template: >-
        {{ state_attr('climate.main_floor', 'current_temperature') | round | int }}° / {{ state_attr('climate.main_floor', 'current_humidity') | round | int }}% humidity
    upstairs_status:
      friendly_name: Upstairs Status
      value_template: >-
        {{ state_attr('climate.upstairs', 'current_temperature') | round | int }}° / {{ state_attr('climate.upstairs', 'current_humidity') | round | int }}% humidity
    familyroom_temperature:
      friendly_name: Family Room Temperature
      value_template: >-
        {{ states('sensor.family_room_temperature') | round | int }}°
    diningroom_temperature:
      friendly_name: Dining Room Temperature
      value_template: >-
        {{ states('sensor.dining_room_temperature') | round | int }}°
