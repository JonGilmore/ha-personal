- binary_sensor:
    - name: "Has Unavailable States"
      state: "{{ states | selectattr('state', 'in', ['unavailable', 'unknown', 'none']) | list | count }}"

- sensor:
    - name: Events Today
      unique_id: events_today
      state: >- # state is `on` when there is an event in the next 0 days
        {{ expand(integration_entities('anniversaries')) | selectattr('state') | map(attribute='state') | list | sort | map('int') | sort | min == 0 }}
      attributes:
        events: >-
          {%- set ns = namespace(a=[]) -%}
          {%- for item in expand(integration_entities('anniversaries')) -%}
          {%- set days = [item.state | int] | min -%}
          {%- set next = item.attributes.get('years_at_next_anniversary') -%}
          {%- set date = item.attributes.get('date') -%}
          {%- if days in [0] %}
          {%- set ns.a = ns.a + [ dict(n=item.name, x=next, d=date.strftime('%Y-%m-%d'), r=days)] %}
          {%- endif -%}
          {%- endfor -%}
          {%- for item in ns.a | sort(attribute='r') -%}
          {%- set name, next, date = item.n, item.x, item.d %}
          {{name}} {%- if next %} ({{next}}) {%- endif %} - {{date}}
          {%- endfor -%}
    - name: Events Tomorrow
      unique_id: events_tomorrow
      state: >- # state is `on` when there is an event in the next 1 days
        {{ expand(integration_entities('anniversaries')) | selectattr('state') | map(attribute='state') | list | sort | map('int') | sort | min == 1 }}
      attributes:
        events: >-
          {%- set ns = namespace(a=[]) -%}
          {%- for item in expand(integration_entities('anniversaries')) -%}
          {%- set days = [item.state | int] | min -%}
          {%- set next = item.attributes.get('years_at_next_anniversary') -%}
          {%- set date = item.attributes.get('date') -%}
          {%- if days == 1 %}
          {%- set ns.a = ns.a + [ dict(n=item.name, x=next, d=date.strftime('%Y-%m-%d'), r=days)] %}
          {%- endif -%}
          {%- endfor -%}
          {%- for item in ns.a | sort(attribute='r') -%}
          {%- set name, next, date = item.n, item.x, item.d %}
          {{name}} {%- if next %} ({{next}}) {%- endif %} - {{date}}
          {%- endfor -%}
    - name: Events in the Next Week
      unique_id: events_in_the_next_week
      state: >- # state is `on` when there is an event in the next 7 days
        {{ expand(integration_entities('anniversaries')) | selectattr('state') | map(attribute='state') | list | sort | map('int') | sort | min < 7 }}
      attributes:
        events: >-
          {%- set ns = namespace(a=[]) -%}
          {%- for item in expand(integration_entities('anniversaries')) -%}
          {%- set days = [item.state | int] | min -%}
          {%- set next = item.attributes.get('years_at_next_anniversary') -%}
          {%- set date = item.attributes.get('date') -%}
          {%- if days == 7 %}
          {%- set ns.a = ns.a + [ dict(n=item.name, x=next, d=date.strftime('%Y-%m-%d'), r=days)] %}
          {%- endif -%}
          {%- endfor -%}
          {%- for item in ns.a | sort(attribute='r') -%}
          {%- set name, next, date = item.n, item.x, item.d %}
          {{name}} {%- if next %} ({{next}}) {%- endif %} - {{date}}
          {%- endfor -%}
    - name: Events in the Next Thirty Days
      unique_id: events_in_the_next_thirty_days
      state: >- # state is `on` when there is an event in the next 30 days
        {{ expand(integration_entities('anniversaries')) | selectattr('state') | map(attribute='state') | list | sort | map('int') | sort | min < 30 }}
      attributes:
        events: >-
          {%- set ns = namespace(a=[]) -%}
          {%- for item in expand(integration_entities('anniversaries')) -%}
          {%- set days = [item.state | int] | min -%}
          {%- set next = item.attributes.get('years_at_next_anniversary') -%}
          {%- set date = item.attributes.get('date') -%}
          {%- if days < 30 %}
          {%- set ns.a = ns.a + [ dict(n=item.name, x=next, d=date.strftime('%Y-%m-%d'), r=days)] %}
          {%- endif -%}
          {%- endfor -%}
          {%- for item in ns.a | sort(attribute='r') -%}
          {%- set name, next, date = item.n, item.x, item.d %}
          {{name}} {%- if next %} ({{next}}) {%- endif %} - {{date}}
          {%- endfor -%}
