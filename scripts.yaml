---
#############################
# 10 second videos
video_driveway:
  alias: "driveway video"
  sequence:
    - service: shell_command.cam_driveway_vid
      data:
        filename: /tmp/driveway.mp4
    - delay:
        seconds: 12
    - service: telegram_bot.send_video
      data_template:
        file: "/tmp/driveway.mp4"
video_daisy:
  alias: "Daisy video"
  sequence:
    - service: shell_command.cam_daisy_vid
      data:
        filename: /tmp/daisy.mp4
    - delay:
        seconds: 13
    - service: telegram_bot.send_video
      data_template:
        file: "/tmp/daisy.mp4"
video_deck:
  alias: "deck video"
  sequence:
    - service: shell_command.cam_deck_vid
      data:
        filename: /tmp/deck.mp4
    - delay:
        seconds: 12
    - service: telegram_bot.send_video
      data_template:
        file: "/tmp/deck.mp4"
video_garage:
  alias: "garage video"
  sequence:
    - service: shell_command.cam_garage_vid
      data:
        filename: /tmp/garage.mp4
    - delay:
        seconds: 12
    - service: telegram_bot.send_video
      data_template:
        file: "/tmp/garage.mp4"
video_kitchen:
  alias: "kitchen video"
  sequence:
    - service: shell_command.cam_kitchen_vid
      data:
        filename: /tmp/kitchen.mp4
    - delay:
        seconds: 12
    - service: telegram_bot.send_video
      data_template:
        file: "/tmp/kitchen.mp4"
video_doorbell:
  alias: "doorbell video"
  sequence:
    - service: shell_command.cam_doorbell_vid
      data:
        filename: /tmp/doorbell.mp4
    - delay:
        seconds: 12
    - service: telegram_bot.send_video
      data_template:
        file: "/tmp/doorbell.mp4"

alarm:
  alias: "alarm"
  sequence:
    - service: notify.telegram_jon
      data_template:
        message: "Alarm active, do you want to disable this?"
        data:
          inline_keyboard:
            - "Yes:/turnoffnotification, No:/do_nothing"
    - service: media_player.volume_set
      data:
        entity_id: media_player.office_googlehome, media_player.main_googlehome, media_player.basement_googlehome
        volume_level: "0.90"
    - service: tts.google_say
      data:
        entity_id: media_player.office_googlehome, media_player.main_googlehome, media_player.basement_googlehome
        message: "Alert!"
    - service: script.turn_on
      entity_id: script.send_videos
    - service: script.turn_on
      entity_id: script.alarm_loop

alarm_loop:
  alias: "alarm loop"
  sequence:
    - condition: state
      entity_id: input_boolean.alarm_notifier
      state: "on"
    - delay:
        seconds: 60
    - service: script.turn_on
      entity_id: script.alarm

lock_doors:
  alias: "lock doors"
  sequence:
    - service: lock.lock
      data:
        entity_id:
          - lock.garage_door_lock
          - lock.front_door_lock

send_videos:
  alias: "send videos"
  sequence:
    - service: script.turn_on
      entity_id:
        - script.video_driveway
        - script.video_doorbell
        - script.video_kitchen

tvs_off:
  alias: "all tvs off"
  sequence:
    - service: media_player.turn_off
      entity_id:
        - media_player.roku_master_tv
        - media_player.roku_gym_tv
    - service: webostv.command
      data:
        entity_id: media_player.living_room_tv
        command: "system/turnOff"

group_set:
  alias: Create groups with enhanced include/exclude statements
  sequence:
    - service: group.set
      data_template:
        object_id: "{{ object_id }}"
        name: "{{ name or object_id }}"
        icon: "{{ icon or '' }}"
        visible: "{{ visible or True }}"
        all: "{{ all or False }}"
        entities: >-
          {# ENTITIES #}
          {% set ns = namespace(entities =
                          (entities.split(',') if entities is string else entities or [])) %}
          {# INCLUDE #}
          {% for group in (include.split(',')  if include  is string else include  or []) %}
          {% set ns.entities = ns.entities +               states.group[group|regex_replace('^.*\.')].attributes.entity_id  | list %}
          {% endfor %}
          {# EXCLUDE #}
          {% for group in (exclude.split(',')  if exclude  is string else exclude  or []) %}
          {% set ns.entities = ns.entities | reject('in',  states.group[group|regex_replace('^.*\.')].attributes.entity_id) | list %}
          {% endfor %}
          {# OUTPUT #}
          {{ ns.entities|join(',') }}
